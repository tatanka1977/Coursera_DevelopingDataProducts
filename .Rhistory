install.packages(c("dplyr", "janitor", "leaflet"))
install.packages("raster")
install.packages("geojsonio")
knitr::opts_chunk$set(echo = TRUE)
countries <- geojsonio::geojson_read("countries.geojson",
what = "sp")
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
View(countries)
leaflet(countries) %>%
addTiles()
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
df <- remove_empty(df, which = c("rows", "cols"))
WorldCapital <- read.csv("./WorldCapitalCoordinates.csv")
WorldCapital <- WorldCapital[WorldCapital$capital=="primary",]
dup_filter <- duplicated(WorldCapital$iso3)
WorldCapital <- WorldCapital[!dup_filter,]
library(dplyr)
df_total <- df %>% merge(WorldCapital[,c(3,4,7)],by.x="ISO Code",by.y="iso3")
leaflet(countries) %>%
addTiles()
library(leaflet)
leaflet(countries) %>%
addTiles()
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ",")))
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(country, ": ", formatC(pop, big.mark = ",")))
View(WorldCapital)
View(countries)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)))
??pal
?addPolygons
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)))
leaflet(countries) %>%
addTiles() %>%
addPolygons()
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(log10(pop)),)
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
countries <- geojsonio::geojson_read("./gz_2010.json",
what = "sp")
?geojson_read
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
countries <- geojsonio::geojson_read("./gz_2010.json",
what = "list")
library(leaflet)
pal <- colorNumeric("viridis", NULL)
leaflet(coun
library(leaflet)
library(leaflet)
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles()
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
View(df_total)
leaflet(countries) %>%
addProviderTiles(df_total$`SUMMARY INDEX`) %>%
addHeatmap(blur = 20, max = 0.05, radius = 15)
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("Rtools")
install.packages("sp")
install.packages("sp")
knitr::opts_chunk$set(echo = TRUE)
library(sp)
pal <- colorNumeric("viridis", NULL)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
df <- remove_empty(df, which = c("rows", "cols"))
WorldCapital <- read.csv("./WorldCapitalCoordinates.csv")
WorldCapital <- WorldCapital[WorldCapital$capital=="primary",]
dup_filter <- duplicated(WorldCapital$iso3)
WorldCapital <- WorldCapital[!dup_filter,]
library(dplyr)
df_total <- df %>% merge(WorldCapital[,c(3,4,7)],by.x="ISO Code",by.y="iso3")
library(leaflet)
m <- leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor") %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$`Legal System and Property Rights`) )
m
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
library(leaflet)
library(sp)
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addProviderTiles(df_total$`SUMMARY INDEX`) %>%
addHeatmap(blur = 20, max = 0.05, radius = 15)
??addHeatmap
install.packages("leaflet.extras")
leaflet(countries) %>%
addProviderTiles(df_total$`SUMMARY INDEX`) %>%
addHeatmap(blur = 20, max = 0.05, radius = 15)
library(leaflet.extras)
leaflet(countries) %>%
addProviderTiles(df_total$`SUMMARY INDEX`) %>%
addHeatmap(blur = 20, max = 0.05, radius = 15)
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
leaflet(countries) %>%
addProviderTiles() %>%
addHeatmap(blur = 20, max = 0.05, radius = 15)
leaflet(countries) %>%
addHeatmap(blur = 20, max = 0.05, radius = 15)
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
nycountries <- geojsonio::geojson_read("./gz_2010.json",
what = "sp")
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
nycountries <- geojsonio::geojson_read("./gz_2010.json",
what = "sp")
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
df <- remove_empty(df, which = c("rows", "cols"))
WorldCapital <- read.csv("./WorldCapitalCoordinates.csv")
WorldCapital <- WorldCapital[WorldCapital$capital=="primary",]
dup_filter <- duplicated(WorldCapital$iso3)
WorldCapital <- WorldCapital[!dup_filter,]
library(dplyr)
df_total <- df %>% merge(WorldCapital[,c(3,4,7)],by.x="ISO Code",by.y="iso3")
library(leaflet)
m <- leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor") %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$`Legal System and Property Rights`) )
m
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
df <- remove_empty(df, which = c("rows", "cols"))
WorldCapital <- read.csv("./WorldCapitalCoordinates.csv")
WorldCapital <- WorldCapital[WorldCapital$capital=="primary",]
dup_filter <- duplicated(WorldCapital$iso3)
WorldCapital <- WorldCapital[!dup_filter,]
library(dplyr)
df_total <- df %>% merge(WorldCapital[,c(3,4,7)],by.x="ISO Code",by.y="iso3")
library(leaflet)
m <- leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor") %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$`Legal System and Property Rights`) )
m
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
nycountries <- geojsonio::geojson_read("./gz_2010.json",
what = "sp")
View(nycountries)
library(leaflet.extras)
?addHeatmap
quakes
leaflet(quakes) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView( 178, -20, 5 ) %>%
addHeatmap(
lng = ~long, lat = ~lat, intensity = ~mag,
blur = 20, max = 0.05, radius = 15
)
View(df_total)
library(leaflet)
m <- leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor") %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$`Legal System and Property Rights`) ) %>% addHeatmap(
+         lng = ~lng, lat = ~lat, intensity = ~df_total$`Legal System and Property
library(leaflet)
m <- leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor") %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$`Legal System and Property Rights`) ) %>% addHeatmap(
+         lng = ~lng, lat = ~lat, intensity = ~df_total$`Legal System and Property
library(leaflet)
m <- leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor") %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$`Legal System and Property Rights`) ) %>% addHeatmap(
+         lng = ~lng, lat = ~lat,blur = 20, max = 0.05, radius = 15)
library(leaflet)
m <- leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor")  %>% addHeatmap(
+         lng = ~lng, lat = ~lat, intensity = ~df_total$`Legal System and Property
leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor")
leaflet(data = df_total) %>% addTiles() %>% addProviderTiles("Stamen.Watercolor")  %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = ~df_total$`Legal System and Property
Rights`,blur = 20, max = 0.05, radius = 15)
install.packages("map")
View(nycountries)
View(countries)
?geojson_read
leaflet(countries) %>%
addHeatmap(blur = 20, max = 0.05, radius = 15)
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
nycountries <- geojsonio::geojson_read("./gz_2010.json",
what = "sp")
pal <- colorNumeric("viridis", NULL)
leaflet(nycounties) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(nycountries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(county, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(nycountries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(pop)),
label = ~paste0(COUNTY, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(nycountries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(CENSUSAREA)),
label = ~paste0(COUNTY, ": ", formatC(pop, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(nycountries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(CENSUSAREA)),
label = ~paste0(COUNTY, ": ", formatC(CENSUSARE, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(nycountries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(CENSUSAREA)),
label = ~paste0(COUNTY, ": ", formatC(CENSUSAREA, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(pop), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(nycountries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(CENSUSAREA)),
label = ~paste0(COUNTY, ": ", formatC(CENSUSAREA, big.mark = ","))) %>%
addLegend(pal = pal, values = ~log10(CENSUSAREA), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(nycountries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(CENSUSAREA))) %>%
addLegend(pal = pal, values = ~log10(CENSUSAREA), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
df <- remove_empty(df, which = c("rows", "cols"))
WorldCapital <- read.csv("./WorldCapitalCoordinates.csv")
WorldCapital <- WorldCapital[WorldCapital$capital=="primary",]
dup_filter <- duplicated(WorldCapital$iso3)
WorldCapital <- WorldCapital[!dup_filter,]
library(dplyr)
df_total <- df %>% merge(WorldCapital[,c(3,4,7)],by.x="ISO Code",by.y="iso3")
View(df_total)
View(df_total)
countries@data <- countries@data %>% merge(df_total,by.x="id",by.y="ISO Code")
View(countries)
View(df)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
colnames(df) <- str_replace_all(colnames(df),'',' and ')
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
colnames(df) <- str_replace_all(colnames(df),'\s+',' and ')
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
colnames(df) <- str_replace_all(colnames(df),'\\s+',' and ')
df <- remove_empty(df, which = c("rows", "cols"))
View(df)
str(df)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
colnames(df) <- gsub('\\s+', '', colnames(df))
df <- remove_empty(df, which = c("rows", "cols"))
str(df)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv2("./2018_EconomicFreedom.csv")
df <- df[,1:9]
df <- df[df$Year==2016,]
library(stringr)
library(janitor)
colnames(df) <- str_remove_all(colnames(df),'X[:digit:][:punct:]{2}')
colnames(df) <- str_replace_all(colnames(df),'[:punct:]'," ")
colnames(df) <- str_replace_all(colnames(df),'   ',' and ')
colnames(df) <- gsub('\\s+', '', colnames(df))
df <- remove_empty(df, which = c("rows", "cols"))
WorldCapital <- read.csv("./WorldCapitalCoordinates.csv")
WorldCapital <- WorldCapital[WorldCapital$capital=="primary",]
dup_filter <- duplicated(WorldCapital$iso3)
WorldCapital <- WorldCapital[!dup_filter,]
library(dplyr)
df_total <- df %>% merge(WorldCapital[,c(3,4,7)],by.x="ISOCode",by.y="iso3")
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
countries@data <- countries@data %>% merge(df_total,by.x="id",by.y="ISO Code")
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
countries@data <- countries@data %>% merge(df_total,by.x="id",by.y="ISOCode")
nycountries <- geojsonio::geojson_read("./gz_2010.json",
what = "sp")
View(countries)
countries <- geojsonio::geojson_read("./countries.geo.json",
what = "sp")
countries@data <- countries@data %>% merge(df_total,by.x="id",by.y="ISOCode")
View(countries)
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x)))
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=lng,lat=lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$Freedomtotradeinternationally) )
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,df_total$lat=lat,clusterOptions=markerClusterOptions(),label = ~as.character(df_total$Freedomtotradeinternationally) )
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng~lng,lat~lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally) )
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,
labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally) )
?addLegend
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index"
labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally) )
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index",labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally) )
?addMarkers
pal <- colorNumeric("viridis", NULL)
monezLeafIcon <- makeIcon(
iconUrl = "/money.png,
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index",labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally) )
pal <- colorNumeric("viridis", NULL)
monezLeafIcon <- makeIcon(
iconUrl = "/money.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index",labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally) )
pal <- colorNumeric("viridis", NULL)
moneyIcon <- makeIcon(
iconUrl = "/money.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index",labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally),icon = moneyIcon )
pal <- colorNumeric("viridis", NULL)
moneyIcon <- makeIcon(
iconUrl = "/money.png",
)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index",labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally),icon = moneyIcon )
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index",labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally),icon = moneyIcon )
pal <- colorNumeric("viridis", NULL)
?colorNumeric
library(leaflet)
pal <- colorNumeric("viridis", NULL)
leaflet(countries) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(SUMMARYINDEX))) %>%
addLegend(pal = pal, values = ~log10(SUMMARYINDEX), opacity = 1.0,title="Summary Index",labFormat = labelFormat(transform = function(x) round(10^x))) %>% addMarkers(lng=df_total$lng,lat=df_total$lat,clusterOptions=markerClusterOptions(),label = ~as.character(Freedomtotradeinternationally),icon = moneyIcon )
